[
  {
    "ContainingType": "JWT.Authentication.Controllers.AuthController",
    "Method": "AddRole",
    "RelativePath": "api/Auth/addRole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "JWT.Authentication.Models.Role",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "JWT.Authentication.Models.Role",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "JWT.Authentication.Controllers.AuthController",
    "Method": "AddUser",
    "RelativePath": "api/Auth/addUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "JWT.Authentication.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "JWT.Authentication.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "JWT.Authentication.Controllers.AuthController",
    "Method": "AddUserRole",
    "RelativePath": "api/Auth/assignUserRole",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addUserRole",
        "Type": "JWT.Authentication.Models.AddUserRole",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "JWT.Authentication.Models.AddUserRole",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "JWT.Authentication.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/logIn",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "JWT.Authentication.Models.LogInRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "JWT.Authentication.Controllers.EmployeeController",
    "Method": "Create",
    "RelativePath": "api/Employee/addEmployee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employee",
        "Type": "JWT.Authentication.Models.Employee",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "JWT.Authentication.Models.Employee",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "JWT.Authentication.Controllers.EmployeeController",
    "Method": "GetAllEmployees",
    "RelativePath": "api/Employee/getAllEmployee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[JWT.Authentication.Models.Employee, JWT.Authentication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "JWT.Authentication.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[JWT.Authentication.WeatherForecast, JWT.Authentication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]